<krpano version="1.19" title="{$_lang.title}" debugmode="false">
 
<include url="%SWFPATH%/skin/vtourskin.xml" />
<include url="%SWFPATH%/autorotate.xml" />
<include url="%SWFPATH%/object.xml" />
<contextmenu fullscreen="false" versioninfo="false">
        <item name="logo" caption="{$_lang.title}" separator="true" onclick="openurl('{$_lang.host}')" devices="flash|webgl"/>
        {foreach $custom_right as $k=> $v}
        	<item name="name_{$v.name}" caption="{$v.title}" onclick="openurl('{$v.content}')" {if $k == 0}separator="true"{/if}  devices="flash|webgl"/>
        {/foreach}
</contextmenu>
<events name="musicevents"
    onnewpano="indexoftxt(result, get(scene[get(xml.scene)].bgmusic),sound); if(result GE 0,tween(sound[bgsnd].volume, 0.5)); set(music_bgmusic,get(scene[get(xml.scene)].bgmusic)); if(music_bgmusic,js(openMusicVoiceBtn());playsound(bgm,get(scene[get(xml.scene)].bgmusic),1,tween(sound[bgsnd].volume, 1)););"
    keep="true"/>
 <layer name="open_alert" url="" keep="true" align="center" edge="center" x="0" y="0" maxwidth="160" maxheight="160"
           enabled="false" visible="false"/>
<action name="show_open_alert">set(layer[open_alert].url,%1); set(layer[open_alert].visible,true); delayedcall(5,
    tween(layer[open_alert].alpha,0,1));
</action>
	 <hotspot name="shadelogo" url="" ath="0" atv="90" distorted="true" scale="1.0" rotate="0.0" rotatewithview="true"
         visible="false" keep="true" onloaded="set(hotspot[shadelogo].rotate,get(view.hlookat));"/>
<events name="shadelogorotation" keep="true"
        onviewchange="if(hotspot[shadelogo].rotatewithview, set(hotspot[shadelogo].rotate,get(view.hlookat)) );"/>
<action name="show_shade">
    set(hotspot[shadelogo].url,%1);
    set(hotspot[shadelogo].atv,%2);
    set(hotspot[shadelogo].visible,true);
    set(hotspot[shadelogo].depth,2000);
</action>
<action name="addShade">
    txtadd(shade_name, 'shade_',%1); 
    addhotspot(get(shade_name));
    set(hotspot[get(shade_name)].url,%2); 
    <!-- set(hotspot[get(shade_name)].ath,0);  -->
    set(hotspot[get(shade_name)].atv,%3);
    set(hotspot[get(shade_name)].distorted,true); 
    set(hotspot[get(shade_name)].scale,"1.0");
    set(hotspot[get(shade_name)].rotate,"0.0");
     set(hotspot[get(shade_name)].rotatewithview,"true");
    set(hotspot[get(shade_name)].visible,"true"); 
    set(hotspot[get(shade_name)].keep,"false");
    set(hotspot[get(shade_name)].onloaded,"set(hotspot[get(shade_name)].rotate,get(view.hlookat));");
</action>  
 <action name="startup" autorun="onstart">
 	copy(startscene,scene[0].name); 
    if(device.fullscreensupport == true,js(showFullscreenBtn()););
    if(device.mobile OR device.tablet,js(hideShareAndFootmarkBtn()););
    loadscene(get(startscene), null, MERGE);
    if(startactions !== null, startactions());
 </action>
	 {foreach $scenesRes as $v}
  	 <scene name="scene_{$v.viewuuid}" title="{$v.sceneTitle}" {if $v.album}album="{$v.album}"{/if}   onstart="activatespot(90)" thumburl="{$v.imgPath}?{time()}" lat="" lng="" heading="">
   
		 <view hlookat="0" vlookat="0" fovtype="MFOV" fov="90" fovmin="5" fovmax="120" vlookatmin="-90" vlookatmax="90" limitview="lookat"/>
		<preview url="resource/pano/{$v.viewuuid}/preview.jpg" />
		<image>
			<cube url="resource/pano/{$v.viewuuid}/pano_%s.jpg" />
			<cube url="resource/pano/{$v.viewuuid}/mobile/pano_%s.jpg" devices="mobile" />
		</image>	
		
	</scene>   
	{/foreach}

{if $hotspot neq ''}
	{assign var="index" value="0"}
	{foreach $hotspot as $v} 
		{if $v.image neq ''} 
			{foreach $v.image as $v1} 
				<gallery name="{$v1.galleryName}" >
					{foreach $v1.imgs as $v2} 
				    	<img name="img_{$index}" url="{$v2.src}" />
				  		{$index = $index+1}
				    {/foreach}
				  </gallery>
		  	{/foreach}
		 {/if}
	{/foreach}
{/if}		   
	
	
	
</krpano>